name: Release
on:
  push:
    branches:
      - master
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  release:
    if: ${{github.repository_owner == 'your-ehsan' && startsWith(github.ref, 'refs/tags/v')}}
    name: Create a Release
    runs-on: windows-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Bump Version & Generate Changelog
        run: |
          pnpm add -g standard-version
          standard-version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Changes (Version & Changelog)
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git add .
          git commit -m "chore(release): bump version and update changelog"
          git push --follow-tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Version
        id: get_version
        run: echo "VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV

      - name: Build
        env:
          ELECTRON_BUILDER_ALLOWED_EXECUTABLES: '*'
        run: pnpm build:win

      - name: Verify Build Output
        run: |
          if [ -z "$(ls dist/*.exe 2>/dev/null)" ]; then
            echo "Build output not found!"
            exit 1
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.VERSION }}
          name: Release v${{ env.VERSION }}
          files: |
            dist/*.exe
            dist/latest.yml
          body_path: CHANGELOG.md
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
